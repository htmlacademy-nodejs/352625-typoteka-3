### 1. Get all articles (Response code: 200)
GET http://localhost:3000/api/articles
Content-Type: application/json


### 2. Get existing article (Response code: 200)
GET http://localhost:3000/api/articles/1
Content-Type: application/json


### 3. Get non-existent article (Response code: 400)
GET http://localhost:3000/api/articles/100000
Content-Type: application/json


### 4. Get all categories (Response code: 200)
GET http://localhost:3000/api/categories
Content-Type: application/json


### 5. Get existing search result (Response code: 200)
GET http://localhost:3000/api/search?query=лучший
Content-Type: application/json


### 6. Get non-existing search result (Response code: 200)
GET http://localhost:3000/api/search?query=asdfghjlkl
Content-Type: application/json


### 7. Get auth status (Response code: 200)
GET http://localhost:3000/api/auth
Content-Type: application/json


### 8. Post new article (valid data) (Response code: 200)
POST http://localhost:3000/api/articles
Content-Type: application/json

{
  "title": "Заголовок должен быть более 30 символов.",
  "announce": "Анонс должен быть более 30 символов чтобы быть валидным.",
  "full_text": "Необязательное поле. Максимальная длина - 1000 символов.",
  "created_date": "11.11.2020",
  "picture": "picture_name.jpg",
  "categories": [1, 4]
}


### 9. Post new article (invalid data) (Response code: 400)
POST http://localhost:3000/api/articles
Content-Type: application/json

{
  "title": "Заголовок не валидный",
  "announce": "Анонс не валидный",
  "full_text": "Необязательное поле. Максимальная длина - 1000 символов.",
  "created_date": "11.11.2020",
  "picture": "picture_name.jpg",
  "categories": []
}



### 10. Update existing article (valid data) (Response code: 201)
PUT http://localhost:3000/api/articles/1
Content-Type: application/json

{
  "title": "Исправленный валидный заголовок более 30 символов.",
  "announce": "Анонс должен быть более 30 символов чтобы быть валидным.",
  "full_text": "Необязательное поле. Максимальная длина - 1000 символов.",
  "created_date": "11.11.2020",
  "picture": "picture_name.jpg",
  "categories": [1, 4]
}


### 11. Update existing article (invalid data) (Response code: 400)
PUT http://localhost:3000/api/articles/1
Content-Type: application/json

{
  "title": "Заголовок не валидный",
  "announce": "Анонс не валидный",
  "full_text": "Необязательное поле. Максимальная длина - 1000 символов.",
  "created_date": "11.11.2020",
  "picture": "picture_name.jpg",
  "categories": [1]
}


### 12. Update non-existing article (Response code: 400)
PUT http://localhost:3000/api/articles/100000
Content-Type: application/json

{
  "first": "Здесь могут быть",
  "next_data": "любые данные",
  "end": ["они отбросятся", "без валидации"],
  "finish": "потому что ID поста не существует"
}


### 13. Put new comment to existing article (valid data) (Response code: 201)
POST http://localhost:3000/api/articles/1/comments
Content-Type: application/json

{
  "text": "Текст более 20 символов"
}


### 14. Put new comment to existing article (invalid data) (Response code: 400)
POST http://localhost:3000/api/articles/1/comments
Content-Type: application/json

{
  "text": "Текст < 20 символов"
}


### 15. Put new comment to non-existing article (Response code: 400)
POST http://localhost:3000/api/articles/100000/comments
Content-Type: application/json

{
  "text": "ID поста не существует, поэтому коммент не запишется."
}


### 16. Delete existing article (Response code: 200)
DELETE http://localhost:3000/api/articles/1


### 17. Delete non-existing article (Response code: 400)
DELETE http://localhost:3000/api/articles/1000000


### 18. Delete existing comment in existing article (Response code: 200)
DELETE http://localhost:3000/api/articles/1/comments/1


### 19. Delete existing comment in non-existing article (Response code: 400)
DELETE http://localhost:3000/api/articles/1000000/comments/1


### 20. Delete non-existing comment in existing article (Response code: 400)
DELETE http://localhost:3000/api/articles/1/comments/1000000


### 21. Add new category to database (Response code: 201)
POST http://localhost:3000/api/categories/add
Content-Type: application/json

{
  "category": "Приключения"
}

### 22. Edit existing category (Response code: 201)
PUT http://localhost:3000/api/categories/1
Content-Type: application/json

{
  "category": "Приключения"
}

### 23. Delete existing category (Response code: 200)
DELETE http://localhost:3000/api/categories/
Content-Type: application/json


### 24. Get users list (Response code: 200)
GET http://localhost:3000/api/user/
Content-Type: application/json


### 25. Get existing user by integer id (Response code: 200)
GET http://localhost:3000/api/user/1
Content-Type: application/json


### 26. Get non-existing user by integer id (Response code: 400)
GET http://localhost:3000/api/user/qwerty
Content-Type: application/json


### 27. Post new user (Response code: 201)
POST http://localhost:3000/api/user
Content-Type: application/json

{
  "firstname": "Иван",
  "lastname": "Петров",
  "email": "ivan_petrov@local.com",
  "password": "qwerty",
  "repeat_password": "qwerty"
}


###

